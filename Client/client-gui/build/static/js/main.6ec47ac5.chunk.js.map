{"version":3,"sources":["reportWebVitals.ts","App.tsx","blockchain.svg","WelcomePage.tsx","Router.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Item","styled","Paper","theme","typography","body2","padding","spacing","textAlign","color","backgroundColor","PageBody","props","enqueueSnackbar","useSnackbar","useState","client","setClient","clientFiles","setClientFiles","clientIpAddress","setClientIpAddress","clientUdpSocket","setClientUdpSocket","clientTcpSocket","setClientTcpSocket","filesSelected","setFilesSelected","clientsExpanded","setClientsExpanded","clientsDiscovered","setClientsDiscovered","filesDiscovered","setFilesDiscovered","searchedClient","setSearchedClient","searchedFile","setSearchedFile","classes","useEffect","variant","fetch","response","json","listOfAvailableFiles","exClient","name","ipAddress","udpSocket","tcpSocket","method","className","Box","sx","width","style","paddingBottom","Grid","container","rowSpacing","columnSpacing","xs","sm","md","paddingLeft","paddingRight","item","display","justifyContent","TextField","InputProps","fontSize","input","InputLabelProps","id","label","onChange","event","target","value","LoadingButton","size","height","borderRadius","endIcon","onClick","console","log","loadingPosition","List","bgcolor","map","file","index","labelId","ListItem","secondaryAction","Icon","disablePadding","ListItemButton","role","undefined","currentIndex","indexOf","newChecked","push","splice","dense","ListItemIcon","Checkbox","edge","checked","tabIndex","disableRipple","inputProps","ListItemText","primary","paddingTop","fileList","forEach","fileIndex","body","JSON","stringify","Typography","IconButton","clientName","newExpanded","handleExpandClient","ExpandLess","ExpandMore","Collapse","in","timeout","unmountOnExit","component","pl","clients","files","withStyles","maxSnack","registerLoading","setRegisterLoading","navigate","useNavigate","enteredName","setEnteredName","serverIpAddress","setServerIpAddress","src","blockchain","alt","test","data","register","loading","Router","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6ec47ac5.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { useEffect, useState } from \"react\";\nimport { SnackbarProvider, VariantType, useSnackbar } from \"notistack\";\nimport \"./App.css\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemButton from \"@mui/material/ListItemButton\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport Icon from \"@mui/material/Icon\";\nimport DescriptionIcon from \"@mui/icons-material/Description\";\nimport Grid from \"@mui/material/Grid\";\nimport Box from \"@mui/material/Box\";\nimport { styled } from \"@mui/material/styles\";\nimport Paper from \"@mui/material/Paper\";\nimport LoadingButton from \"@mui/lab/LoadingButton\";\nimport FileUploadIcon from \"@mui/icons-material/FileUpload\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport { Typography } from \"@mui/material\";\nimport TextField from \"@material-ui/core/TextField\";\nimport withStyles from \"@material-ui/styles/withStyles\";\nimport IconButton from \"@mui/material/IconButton\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport PersonIcon from \"@mui/icons-material/Person\";\nimport Collapse from \"@mui/material/Collapse\";\nimport { ExpandLess, ExpandMore } from \"@mui/icons-material\";\nimport UpdateIcon from \"@mui/icons-material/Update\";\nimport DownloadIcon from \"@mui/icons-material/Download\";\n\nconst Item = styled(Paper)(({ theme }) => ({\n  ...theme.typography.body2,\n  padding: theme.spacing(1),\n  textAlign: \"center\",\n  color: \"white\",\n  backgroundColor: \"#3b414b\",\n}));\n\nconst styles = {\n  input: {\n    color: \"white\",\n  },\n};\n\nexport type Client = {\n  name: string;\n  ipAddress: string;\n  udpSocket: string;\n  tcpSocket: string;\n  listOfAvailableFiles: string[];\n};\n\nfunction PageBody(props: { classes: any }) {\n  const { enqueueSnackbar } = useSnackbar();\n  const [client, setClient] = useState<Client>();\n  const [clientFiles, setClientFiles] = useState<string[]>([]);\n  const [clientIpAddress, setClientIpAddress] = useState(\"\");\n  const [clientUdpSocket, setClientUdpSocket] = useState(\"\");\n  const [clientTcpSocket, setClientTcpSocket] = useState(\"\");\n  const [filesSelected, setFilesSelected] = useState<number[]>([]);\n  const [clientsExpanded, setClientsExpanded] = useState<string[]>([]);\n  const [clientsDiscovered, setClientsDiscovered] = useState<Client[]>([]);\n  const [filesDiscovered, setFilesDiscovered] = useState<string[]>([]);\n  const [searchedClient, setSearchedClient] = useState(\"\");\n  const [searchedFile, setSearchedFile] = useState(\"\");\n  const { classes } = props;\n\n  useEffect(() => {\n    enqueueSnackbar(\"Registration Successful!\", {\n      variant: \"success\" as VariantType,\n    });\n\n    fetch(\"/client\")\n      .then((response) => {\n        return response.json();\n      })\n      .then((client: Client) => {\n        setClient(client);\n        setClientFiles(client.listOfAvailableFiles);\n      });\n\n    const exClient: Client = {\n      name: \"Me\",\n      ipAddress: \"4352345\",\n      listOfAvailableFiles: [\"MYYY FILE 1\", \"MY FILE @\", \"ETC BB\"],\n      udpSocket: \"324234\",\n      tcpSocket: \"324234\",\n    };\n    setClient(exClient);\n    setClientFiles(exClient.listOfAvailableFiles);\n\n    return () => {\n      fetch(\"/de_register\", {\n        method: \"POST\",\n      });\n    };\n  }, []);\n\n  const onUpdateUserInfo = () => {\n    console.log(\n      `IP Address: ${clientIpAddress}\\nUDP Socket: ${clientUdpSocket}\\nTCP Socket: ${clientTcpSocket}`\n    );\n  };\n\n  const onPublishFiles = () => {\n    let fileList: string[] = [];\n    filesSelected.forEach((fileIndex) => {\n      fileList.push(client?.listOfAvailableFiles[fileIndex] ?? \"\");\n    });\n    fetch(\"/publish\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        filesSelected: fileList,\n      }),\n    });\n  };\n\n  const onRemoveFiles = () => {\n    let fileList: string[] = [];\n    filesSelected.forEach((fileIndex) => {\n      fileList.push(client?.listOfAvailableFiles[fileIndex] ?? \"\");\n    });\n    fetch(\"/remove\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        filesSelected: fileList,\n      }),\n    });\n  };\n\n  const onSearchAllClients = () => {\n    console.log(\"Search all clients clicked\");\n    const clients: Client[] = [\n      {\n        name: \"Adrian\",\n        ipAddress: \"127.0.0.1\",\n        udpSocket: \"8080\",\n        tcpSocket: \"800\",\n        listOfAvailableFiles: [\"Legend of Zelda\", \"Thingy\"],\n      },\n      {\n        name: \"Ya boi\",\n        ipAddress: \"127.0.0.1\",\n        udpSocket: \"8080\",\n        tcpSocket: \"80000\",\n        listOfAvailableFiles: [\"Legend of Jawn\", \"Jawny\"],\n      },\n    ];\n    setClientsDiscovered(clients);\n    let files: string[] = [];\n    clients.forEach((client) => {\n      client.listOfAvailableFiles.forEach((file) => {\n        files.push(file);\n      });\n    });\n    setFilesDiscovered(files);\n  };\n\n  const onSearchAllFiles = () => {\n    console.log(\"Search all files clicked\");\n  };\n\n  const onSearchClient = () => {\n    console.log(\"Client searched: \" + searchedClient);\n  };\n\n  const onSearchFile = () => {\n    console.log(\"File searched: \" + searchedFile);\n    const searchedFileResult = searchedFile;\n    const sampleresultFile: string = \"Result File search!\";\n    setFilesDiscovered([sampleresultFile]);\n    //setFile;\n  };\n\n  const handleToggleFiles = (value: number) => () => {\n    const currentIndex = filesSelected.indexOf(value);\n    const newChecked = [...filesSelected];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setFilesSelected(newChecked);\n  };\n\n  const handleExpandClient = (clientName: string) => {\n    const currentIndex = clientsExpanded.indexOf(clientName);\n    const newExpanded = [...clientsExpanded];\n\n    if (currentIndex === -1) {\n      newExpanded.push(clientName);\n    } else {\n      newExpanded.splice(currentIndex, 1);\n    }\n    setClientsExpanded(newExpanded);\n  };\n\n  // let clients: Client[] = [\n  //   {\n  //     rq: 0,\n  //     name: \"Adrian\",\n  //     ipAddress: \"127.0.0.1\",\n  //     udpSocket: \"8080\",\n  //     tcpSocket: \"800\",\n  //     listOfAvailableFiles: [\"Legend of Zelda\", \"Thingy\"],\n  //   },\n  //   {\n  //     rq: 1,\n  //     name: \"Ya boi\",\n  //     ipAddress: \"127.0.0.1\",\n  //     udpSocket: \"8080\",\n  //     tcpSocket: \"80000\",\n  //     listOfAvailableFiles: [\"Legend of Jawn\", \"Jawny\"],\n  //   },\n  // ];\n\n  return (\n    <>\n      <div className=\"App\">\n        <header className=\"App-page-header\">Time to get transferring.</header>\n\n        <Box\n          sx={{ width: \"100%\" }}\n          style={{ backgroundColor: \"#282c34\", paddingBottom: \"20px\" }}\n        >\n          <Grid\n            container\n            rowSpacing={1}\n            columnSpacing={{ xs: 1, sm: 2, md: 3 }}\n            style={{ paddingLeft: \"20px\", paddingRight: \"20px\" }}\n          >\n            <Grid item xs={12}>\n              <Item>\n                <p className=\"Grid-titles\">{client ? client.name : \"\"}</p>\n\n                <Box sx={{ width: \"100%\" }}>\n                  <Grid\n                    container\n                    rowSpacing={1}\n                    columnSpacing={{ xs: 1, sm: 2, md: 3 }}\n                  >\n                    <Grid\n                      item\n                      xs={6}\n                      style={{ paddingBottom: \"20px\", paddingLeft: \"50px\" }}\n                      display=\"flex\"\n                      justifyContent=\"flex-start\"\n                    >\n                      <p className=\"Grid-titles\">\n                        <b>IP Address:</b> {client?.ipAddress}\n                      </p>\n                    </Grid>\n                    <Grid\n                      item\n                      xs={6}\n                      style={{ paddingBottom: \"20px\", paddingLeft: \"30px\" }}\n                      display=\"flex\"\n                      justifyContent=\"flex-start\"\n                    >\n                      <TextField\n                        style={{ width: 330 }}\n                        InputProps={{\n                          style: { color: \"white\", fontSize: \"20px\" },\n                          className: classes.input,\n                        }}\n                        InputLabelProps={{\n                          style: { color: \"white\", fontSize: \"16px\" },\n                          className: classes.input,\n                        }}\n                        id=\"client-search\"\n                        label=\"Enter a new IP Address\"\n                        variant=\"standard\"\n                        color=\"primary\"\n                        onChange={(event) =>\n                          setClientIpAddress(event.target.value)\n                        }\n                      />\n                    </Grid>\n                  </Grid>\n                  <Grid\n                    container\n                    rowSpacing={1}\n                    columnSpacing={{ xs: 1, sm: 2, md: 3 }}\n                  >\n                    <Grid\n                      item\n                      xs={6}\n                      style={{ paddingBottom: \"20px\", paddingLeft: \"50px\" }}\n                      display=\"flex\"\n                      justifyContent=\"flex-start\"\n                    >\n                      <p className=\"Grid-titles\">\n                        <b>UDP Socket:</b> {client?.udpSocket}\n                      </p>\n                    </Grid>\n                    <Grid\n                      item\n                      xs={6}\n                      style={{ paddingBottom: \"20px\", paddingLeft: \"30px\" }}\n                      display=\"flex\"\n                      justifyContent=\"flex-start\"\n                    >\n                      <TextField\n                        style={{ width: 330 }}\n                        InputProps={{\n                          style: { color: \"white\", fontSize: \"20px\" },\n                          className: classes.input,\n                        }}\n                        InputLabelProps={{\n                          style: { color: \"white\", fontSize: \"16px\" },\n                          className: classes.input,\n                        }}\n                        id=\"client-search\"\n                        label=\"Enter a new UDP Socket\"\n                        variant=\"standard\"\n                        color=\"primary\"\n                        onChange={(event) =>\n                          setClientUdpSocket(event.target.value)\n                        }\n                      />\n                    </Grid>\n                    <Grid\n                      container\n                      rowSpacing={1}\n                      columnSpacing={{ xs: 1, sm: 2, md: 3 }}\n                      style={{ paddingLeft: \"20px\" }}\n                    >\n                      <Grid\n                        item\n                        xs={6}\n                        style={{ paddingBottom: \"20px\", paddingLeft: \"50px\" }}\n                        display=\"flex\"\n                        justifyContent=\"flex-start\"\n                      >\n                        <p className=\"Grid-titles\">\n                          <b>TCP Socket:</b> {client?.tcpSocket}\n                        </p>\n                      </Grid>\n                      <Grid\n                        item\n                        xs={6}\n                        style={{ paddingBottom: \"20px\", paddingLeft: \"30px\" }}\n                        display=\"flex\"\n                        justifyContent=\"flex-start\"\n                      >\n                        <TextField\n                          style={{ width: 330 }}\n                          InputProps={{\n                            style: { color: \"white\", fontSize: \"20px\" },\n                            className: classes.input,\n                          }}\n                          InputLabelProps={{\n                            style: { color: \"white\", fontSize: \"16px\" },\n                            className: classes.input,\n                          }}\n                          id=\"client-search\"\n                          label=\"Enter a new TCP Socket\"\n                          variant=\"standard\"\n                          color=\"primary\"\n                          onChange={(event) =>\n                            setClientTcpSocket(event.target.value)\n                          }\n                        />\n                      </Grid>\n                    </Grid>\n                  </Grid>\n                  <Grid\n                    container\n                    rowSpacing={1}\n                    columnSpacing={{ xs: 1, sm: 2, md: 3 }}\n                  >\n                    <Grid\n                      item\n                      xs={6}\n                      style={{ paddingBottom: \"20px\", paddingLeft: \"30px\" }}\n                      display=\"flex\"\n                      justifyContent=\"flex-start\"\n                    ></Grid>\n                    <Grid\n                      item\n                      xs={6}\n                      style={{ paddingBottom: \"20px\", paddingLeft: \"100px\" }}\n                      display=\"flex\"\n                      justifyContent=\"flex-start\"\n                    >\n                      <LoadingButton\n                        variant=\"contained\"\n                        size=\"large\"\n                        style={{ width: 200, height: 60, borderRadius: 5 }}\n                        endIcon={<UpdateIcon />}\n                        onClick={onUpdateUserInfo}\n                        // loading={registerLoading}\n                        loadingPosition=\"end\"\n                      >\n                        Update\n                      </LoadingButton>\n                    </Grid>\n                  </Grid>\n                </Box>\n              </Item>\n            </Grid>\n\n            <Grid item xs={12}>\n              <Item>\n                <p className=\"Grid-titles\">Your files</p>\n\n                <List\n                  sx={{\n                    width: \"100%\",\n                    bgcolor: \"#282c34\",\n                    borderRadius: \"4px\",\n                  }}\n                >\n                  {clientFiles.map((file, index) => {\n                    const labelId = `checkbox-list-label-${file}`;\n\n                    return (\n                      <ListItem\n                        key={file}\n                        secondaryAction={\n                          <Icon>\n                            <DescriptionIcon style={{ color: \"white\" }} />\n                          </Icon>\n                        }\n                        disablePadding\n                      >\n                        <ListItemButton\n                          role={undefined}\n                          onClick={handleToggleFiles(index)}\n                          dense\n                        >\n                          <ListItemIcon>\n                            <Checkbox\n                              edge=\"start\"\n                              style={{ color: \"white\" }}\n                              checked={filesSelected.indexOf(index) !== -1}\n                              tabIndex={-1}\n                              disableRipple\n                              inputProps={{ \"aria-labelledby\": labelId }}\n                            />\n                          </ListItemIcon>\n                          <ListItemText\n                            id={labelId}\n                            primary={file}\n                            style={{ color: \"white\" }}\n                          />\n                        </ListItemButton>\n                      </ListItem>\n                    );\n                  })}\n                </List>\n                <Box sx={{ width: \"100%\" }} style={{ paddingTop: \"10px\" }}>\n                  <Grid\n                    container\n                    rowSpacing={1}\n                    columnSpacing={{ xs: 1, sm: 2, md: 3 }}\n                  >\n                    <Grid item xs={6}>\n                      <LoadingButton\n                        variant=\"contained\"\n                        size=\"large\"\n                        style={{ width: 200, height: 60, borderRadius: 5 }}\n                        endIcon={<FileUploadIcon />}\n                        onClick={onPublishFiles}\n                        // loading={registerLoading}\n                        loadingPosition=\"end\"\n                      >\n                        <Typography>Publish</Typography>\n                      </LoadingButton>\n                    </Grid>\n                    <Grid item xs={6}>\n                      <LoadingButton\n                        variant=\"contained\"\n                        size=\"large\"\n                        style={{ width: 200, height: 60, borderRadius: 5 }}\n                        endIcon={<DeleteIcon />}\n                        onClick={onRemoveFiles}\n                        // loading={registerLoading}\n                        loadingPosition=\"end\"\n                      >\n                        <Typography>Remove</Typography>\n                      </LoadingButton>\n                    </Grid>\n                  </Grid>\n                </Box>\n              </Item>\n            </Grid>\n\n            <Grid item xs={12}>\n              <Item>\n                <p className=\"Grid-titles\">Available Clients</p>\n                <Box sx={{ width: \"100%\" }}>\n                  <Grid\n                    container\n                    rowSpacing={1}\n                    columnSpacing={{ xs: 1, sm: 2, md: 3 }}\n                  >\n                    <Grid\n                      item\n                      xs={12}\n                      style={{ paddingBottom: \"20px\", paddingLeft: \"30px\" }}\n                      display=\"flex\"\n                      justifyContent=\"flex-start\"\n                    >\n                      <TextField\n                        style={{ width: 330 }}\n                        InputProps={{\n                          style: { color: \"white\", fontSize: \"20px\" },\n                          className: classes.input,\n                        }}\n                        InputLabelProps={{\n                          style: { color: \"white\", fontSize: \"20px\" },\n                          className: classes.input,\n                        }}\n                        id=\"client-search\"\n                        label=\"Client Name\"\n                        variant=\"standard\"\n                        color=\"primary\"\n                        onChange={(event) =>\n                          setSearchedClient(event.target.value)\n                        }\n                      />\n\n                      <IconButton\n                        aria-label=\"delete\"\n                        onClick={() => onSearchClient()}\n                      >\n                        <SearchIcon style={{ color: \"white\" }} />\n                      </IconButton>\n                    </Grid>\n                  </Grid>\n                </Box>\n                <List\n                  sx={{\n                    width: \"100%\",\n                    bgcolor: \"#282c34\",\n                    borderRadius: \"4px\",\n                  }}\n                >\n                  {clientsDiscovered.map((client) => {\n                    return (\n                      <Box>\n                        <ListItemButton\n                          onClick={() => handleExpandClient(client.name)}\n                        >\n                          <ListItemIcon>\n                            <PersonIcon style={{ color: \"white\" }} />\n                          </ListItemIcon>\n                          <ListItemText primary={client.name} />\n                          {clientsExpanded.indexOf(client.name) !== -1 ? (\n                            <ExpandLess />\n                          ) : (\n                            <ExpandMore />\n                          )}\n                        </ListItemButton>\n                        <Collapse\n                          in={clientsExpanded.indexOf(client.name) !== -1}\n                          timeout=\"auto\"\n                          unmountOnExit\n                        >\n                          <List component=\"div\" disablePadding>\n                            {client.listOfAvailableFiles.map((file) => {\n                              return (\n                                <ListItemButton sx={{ pl: 4 }}>\n                                  <ListItemIcon>\n                                    <DescriptionIcon\n                                      style={{ color: \"white\" }}\n                                    />\n                                  </ListItemIcon>\n                                  <ListItemText primary={file} />\n                                </ListItemButton>\n                              );\n                            })}\n                          </List>\n                        </Collapse>\n                      </Box>\n                    );\n                  })}\n                </List>\n                <Box sx={{ width: \"100%\" }} style={{ paddingTop: \"10px\" }}>\n                  <Grid\n                    container\n                    rowSpacing={1}\n                    columnSpacing={{ xs: 1, sm: 2, md: 3 }}\n                  >\n                    <Grid item xs={12}>\n                      <LoadingButton\n                        variant=\"contained\"\n                        size=\"large\"\n                        style={{ width: 200, height: 60, borderRadius: 5 }}\n                        endIcon={<SearchIcon />}\n                        onClick={onSearchAllClients}\n                        // loading={registerLoading}\n                        loadingPosition=\"end\"\n                      >\n                        <Typography>Search All</Typography>\n                      </LoadingButton>\n                    </Grid>\n                  </Grid>\n                </Box>\n              </Item>\n            </Grid>\n\n            <Grid item xs={12}>\n              <Item>\n                <p className=\"Grid-titles\">Available Files</p>\n                <Box sx={{ width: \"100%\" }}>\n                  <Grid\n                    container\n                    rowSpacing={1}\n                    columnSpacing={{ xs: 1, sm: 2, md: 3 }}\n                  >\n                    <Grid\n                      item\n                      xs={12}\n                      style={{ paddingBottom: \"20px\", paddingLeft: \"30px\" }}\n                      display=\"flex\"\n                      justifyContent=\"flex-start\"\n                    >\n                      <TextField\n                        style={{ width: 330 }}\n                        InputProps={{\n                          style: { color: \"white\", fontSize: \"20px\" },\n                          className: classes.input,\n                        }}\n                        InputLabelProps={{\n                          style: { color: \"white\", fontSize: \"20px\" },\n                          className: classes.input,\n                        }}\n                        id=\"file-search\"\n                        label=\"File Name\"\n                        variant=\"standard\"\n                        color=\"primary\"\n                        onChange={(event) =>\n                          setSearchedFile(event.target.value)\n                        }\n                      />\n                      <IconButton\n                        aria-label=\"delete\"\n                        onClick={() => onSearchFile()}\n                      >\n                        <SearchIcon style={{ color: \"white\" }} />\n                      </IconButton>\n                    </Grid>\n                  </Grid>\n                </Box>\n                <List\n                  sx={{\n                    width: \"100%\",\n                    bgcolor: \"#282c34\",\n                    borderRadius: \"4px\",\n                  }}\n                >\n                  {filesDiscovered.map((file) => {\n                    const labelId = `checkbox-list-label-${file}`;\n\n                    return (\n                      <ListItem\n                        key={file}\n                        secondaryAction={\n                          <IconButton>\n                            <DownloadIcon\n                              style={{ color: \"white\" }}\n                              onClick={() => console.log(\"Download \" + file)}\n                            />\n                          </IconButton>\n                        }\n                        disablePadding\n                      >\n                        <ListItemButton role={undefined} dense>\n                          <ListItemIcon>\n                            <DescriptionIcon\n                              style={{ color: \"white\", paddingBottom: \"5px\" }}\n                            />\n                          </ListItemIcon>\n                          <ListItemText\n                            id={labelId}\n                            primary={file}\n                            style={{ color: \"white\" }}\n                          />\n                        </ListItemButton>\n                      </ListItem>\n                    );\n                  })}\n                </List>\n                <Box sx={{ width: \"100%\" }} style={{ paddingTop: \"10px\" }}>\n                  <Grid\n                    container\n                    rowSpacing={1}\n                    columnSpacing={{ xs: 1, sm: 2, md: 3 }}\n                  >\n                    <Grid item xs={12}>\n                      <LoadingButton\n                        variant=\"contained\"\n                        size=\"large\"\n                        style={{ width: 200, height: 60, borderRadius: 5 }}\n                        endIcon={<SearchIcon />}\n                        onClick={onSearchAllFiles}\n                        // loading={registerLoading}\n                        loadingPosition=\"end\"\n                      >\n                        <Typography>Search All</Typography>\n                      </LoadingButton>\n                    </Grid>\n                  </Grid>\n                </Box>\n              </Item>\n            </Grid>\n          </Grid>\n        </Box>\n      </div>\n    </>\n  );\n}\n\nfunction App(props: JSX.IntrinsicAttributes & { classes: any }) {\n  return (\n    <SnackbarProvider maxSnack={3}>\n      <PageBody {...props} />\n    </SnackbarProvider>\n  );\n}\n\nexport default withStyles(styles)(App);\n","export default __webpack_public_path__ + \"static/media/blockchain.9f725277.svg\";","import blockchain from \"./blockchain.svg\";\nimport \"./WelcomePage.css\";\nimport LoadingButton from \"@mui/lab/LoadingButton\";\nimport ConnectWithoutContactIcon from \"@mui/icons-material/ConnectWithoutContact\";\nimport { Typography } from \"@mui/material\";\nimport { useState } from \"react\";\nimport { SnackbarProvider, useSnackbar, VariantType } from \"notistack\";\nimport { useNavigate } from \"react-router\";\nimport TextField from \"@mui/material/TextField\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst styles = {\n  input: {\n    color: \"white\",\n  },\n};\n\nfunction PageBody(props: { classes: any }) {\n  const { enqueueSnackbar } = useSnackbar();\n  const [registerLoading, setRegisterLoading] = useState(false);\n  const navigate = useNavigate();\n  const [enteredName, setEnteredName] = useState(\"\");\n  const [serverIpAddress, setServerIpAddress] = useState(\"\");\n  const { classes } = props;\n\n  const onRegister = () => {\n    setRegisterLoading(true);\n\n    if (\n      !/^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$/gi.test(\n        serverIpAddress\n      )\n    ) {\n      enqueueSnackbar(`Failed to register: Invalid IP Address!`, {\n        variant: \"error\" as VariantType,\n      });\n      setRegisterLoading(false);\n    } else {\n      fetch(\"/register\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          name: enteredName,\n          serverIpAddress: serverIpAddress,\n        }),\n      })\n        .then((response) => response.json())\n        .then((data) => {\n          if (data.register === true) {\n            navigate(`app`);\n          } else {\n            enqueueSnackbar(`Failed to register: ${data.register}`, {\n              variant: \"error\" as VariantType,\n            });\n            setRegisterLoading(false);\n          }\n        });\n    }\n  };\n\n  return (\n    <>\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={blockchain} className=\"App-logo\" alt=\"logo\" />\n          <p className=\"App-title\">\n            Welcome to P2PFS, a Peer to Peer File Sharing system.\n          </p>\n          <div>\n            <TextField\n              style={{ width: 300 }}\n              InputProps={{\n                style: { color: \"white\", fontSize: \"20px\" },\n                className: classes.input,\n              }}\n              InputLabelProps={{\n                style: { color: \"white\", fontSize: \"20px\" },\n                className: classes.input,\n              }}\n              id=\"client-name\"\n              label=\"Name\"\n              variant=\"standard\"\n              color=\"primary\"\n              onChange={(event) => setEnteredName(event.target.value)}\n            />\n          </div>\n          <div>\n            <TextField\n              style={{ width: 300 }}\n              InputProps={{\n                style: { color: \"white\", fontSize: \"20px\" },\n                className: classes.input,\n              }}\n              InputLabelProps={{\n                style: { color: \"white\", fontSize: \"20px\" },\n                className: classes.input,\n              }}\n              id=\"client-name\"\n              label=\"Server IP Address\"\n              variant=\"standard\"\n              color=\"primary\"\n              onChange={(event) => setServerIpAddress(event.target.value)}\n            />\n          </div>\n          <div className=\"Register-button\">\n            <LoadingButton\n              variant=\"contained\"\n              size=\"large\"\n              style={{ width: 300, height: 60, borderRadius: 50 }}\n              endIcon={<ConnectWithoutContactIcon />}\n              onClick={onRegister}\n              loading={registerLoading}\n              loadingPosition=\"end\"\n            >\n              <Typography>Register</Typography>\n            </LoadingButton>\n          </div>\n        </header>\n      </div>\n    </>\n  );\n}\n\nfunction WelcomePage(props: JSX.IntrinsicAttributes & { classes: any }) {\n  return (\n    <SnackbarProvider maxSnack={3}>\n      <PageBody {...props} />\n    </SnackbarProvider>\n  );\n}\n\nexport default withStyles(styles)(WelcomePage);\n","import { FC } from \"react\";\nimport { Route, Routes } from \"react-router-dom\";\nimport App from \"./App\";\nimport WelcomePage from \"./WelcomePage\";\n\nexport type IRouter = {};\n\nexport const Router: FC<IRouter> = () => {\n  return (\n    <Routes>\n      <Route path=\"/\" element={<WelcomePage />} />\n      <Route path=\"/app\" element={<App />} />\n    </Routes>\n  );\n};\n\nexport default Router;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport WelcomePage from './WelcomePage';\nimport reportWebVitals from './reportWebVitals';\nimport Router from './Router';\nimport { BrowserRouter } from \"react-router-dom\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Router />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}