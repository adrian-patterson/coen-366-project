{"version":3,"sources":["reportWebVitals.ts","App.tsx","blockchain.svg","WelcomePage.tsx","Router.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Item","styled","Paper","theme","typography","body2","padding","spacing","textAlign","color","backgroundColor","PageBody","props","enqueueSnackbar","useSnackbar","useState","client","setClient","clientFiles","setClientFiles","clientIpAddress","setClientIpAddress","clientUdpSocket","setClientUdpSocket","clientTcpSocket","setClientTcpSocket","filesSelected","setFilesSelected","clientsExpanded","setClientsExpanded","clientsDiscovered","setClientsDiscovered","filesDiscovered","setFilesDiscovered","searchedClient","setSearchedClient","searchedFile","setSearchedFile","classes","navigate","useNavigate","useEffect","variant","fetch","response","json","listOfAvailableFiles","method","className","Grid","container","style","paddingTop","item","xs","Tooltip","title","marginBottom","onClick","Box","sx","width","paddingBottom","rowSpacing","columnSpacing","sm","md","paddingLeft","paddingRight","name","display","justifyContent","ipAddress","TextField","InputProps","fontSize","input","InputLabelProps","id","label","onChange","event","target","value","udpSocket","tcpSocket","LoadingButton","size","height","borderRadius","endIcon","test","isNaN","Number","body","JSON","stringify","data","update","loadingPosition","List","bgcolor","map","file","index","labelId","ListItem","secondaryAction","Icon","disablePadding","ListItemButton","role","undefined","currentIndex","indexOf","newChecked","push","splice","dense","ListItemIcon","Checkbox","edge","checked","tabIndex","disableRipple","inputProps","ListItemText","primary","fileList","forEach","fileIndex","publish","Typography","remove","IconButton","a","ok","result","retrieve","Promise","reject","newClientsList","ip_address","list_of_available_files","tcp_socket","clientName","newExpanded","handleExpandClient","ExpandLess","ExpandMore","Collapse","in","timeout","unmountOnExit","component","pl","clients","files","includes","fileName","searchfile","newFileList","list_of_clients","c","download","onDownloadFile","f","withStyles","maxSnack","registerLoading","setRegisterLoading","loginLoading","setLoginLoading","enteredName","setEnteredName","registeredClientName","setRegisteredClientName","serverIpAddress","setServerIpAddress","src","blockchain","alt","register","loading","login","Router","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cdefd2e4.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { useEffect, useState } from \"react\";\nimport { SnackbarProvider, VariantType, useSnackbar } from \"notistack\";\nimport \"./App.css\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemButton from \"@mui/material/ListItemButton\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport Icon from \"@mui/material/Icon\";\nimport DescriptionIcon from \"@mui/icons-material/Description\";\nimport Grid from \"@mui/material/Grid\";\nimport Box from \"@mui/material/Box\";\nimport { styled } from \"@mui/material/styles\";\nimport Paper from \"@mui/material/Paper\";\nimport LoadingButton from \"@mui/lab/LoadingButton\";\nimport FileUploadIcon from \"@mui/icons-material/FileUpload\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport { Tooltip, Typography } from \"@mui/material\";\nimport { useNavigate } from \"react-router\";\nimport TextField from \"@material-ui/core/TextField\";\nimport withStyles from \"@material-ui/styles/withStyles\";\nimport IconButton from \"@mui/material/IconButton\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport PersonIcon from \"@mui/icons-material/Person\";\nimport Collapse from \"@mui/material/Collapse\";\nimport { ExpandLess, ExpandMore } from \"@mui/icons-material\";\nimport UpdateIcon from \"@mui/icons-material/Update\";\nimport DownloadIcon from \"@mui/icons-material/Download\";\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\n\nconst Item = styled(Paper)(({ theme }) => ({\n  ...theme.typography.body2,\n  padding: theme.spacing(1),\n  textAlign: \"center\",\n  color: \"white\",\n  backgroundColor: \"#3b414b\",\n}));\n\nconst styles = {\n  input: {\n    color: \"white\",\n  },\n};\n\nexport type Client = {\n  name: string;\n  ipAddress: string;\n  tcpSocket: string;\n  listOfAvailableFiles: string[];\n};\n\nexport type MyClient = {\n  name: string;\n  ipAddress: string;\n  tcpSocket: string;\n  udpSocket: string;\n  listOfAvailableFiles: string[];\n};\n\nexport type File = {\n  clientName: string;\n  fileName: string;\n  ipAddress: string;\n  tcpSocket: string;\n};\n\nfunction PageBody(props: { classes: any }) {\n  const { enqueueSnackbar } = useSnackbar();\n  const [client, setClient] = useState<MyClient>();\n  const [clientFiles, setClientFiles] = useState<string[]>([]);\n  const [clientIpAddress, setClientIpAddress] = useState(\"\");\n  const [clientUdpSocket, setClientUdpSocket] = useState(\"\");\n  const [clientTcpSocket, setClientTcpSocket] = useState(\"\");\n  const [filesSelected, setFilesSelected] = useState<number[]>([]);\n  const [clientsExpanded, setClientsExpanded] = useState<string[]>([]);\n  const [clientsDiscovered, setClientsDiscovered] = useState<Client[]>([]);\n  const [filesDiscovered, setFilesDiscovered] = useState<File[]>([]);\n  const [searchedClient, setSearchedClient] = useState(\"\");\n  const [searchedFile, setSearchedFile] = useState(\"\");\n  const { classes } = props;\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    enqueueSnackbar(\"Registered with Server!\", {\n      variant: \"success\" as VariantType,\n    });\n\n    fetch(\"/client\")\n      .then((response) => {\n        return response.json();\n      })\n      .then((client: MyClient) => {\n        setClient(client);\n        setClientFiles(client.listOfAvailableFiles);\n      });\n\n    return () => {\n      fetch(\"/de_register\", {\n        method: \"POST\",\n      });\n    };\n  }, []);\n\n  const onBack = () => {\n    fetch(\"/de_register\", {\n      method: \"POST\",\n    }).then(() => navigate(`/`));\n  };\n\n  const onUpdateUserInfo = () => {\n    if (\n      !/^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$/gi.test(\n        clientIpAddress\n      )\n    ) {\n      enqueueSnackbar(`Failed to Update: Invalid IP Address`, {\n        variant: \"error\" as VariantType,\n      });\n      return;\n    } else if (isNaN(Number(clientUdpSocket))) {\n      enqueueSnackbar(`Failed to Update: Invalid UDP Socket`, {\n        variant: \"error\" as VariantType,\n      });\n      return;\n    } else if (isNaN(Number(clientTcpSocket))) {\n      enqueueSnackbar(`Failed to Update: Invalid TCP Socket`, {\n        variant: \"error\" as VariantType,\n      });\n      return;\n    }\n\n    fetch(\"/update\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        ipAddress: clientIpAddress,\n        udpSocket: clientUdpSocket,\n        tcpSocket: clientTcpSocket,\n      }),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        if (data.update === true) {\n          enqueueSnackbar(`Successfully updated info!`, {\n            variant: \"success\" as VariantType,\n          });\n        } else {\n          enqueueSnackbar(`Update denied: ${data.update}`, {\n            variant: \"error\" as VariantType,\n          });\n        }\n      });\n  };\n\n  const onPublishFiles = () => {\n    let fileList: string[] = [];\n    filesSelected.forEach((fileIndex) => {\n      fileList.push(client?.listOfAvailableFiles[fileIndex] ?? \"\");\n    });\n    fetch(\"/publish\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        filesSelected: fileList,\n      }),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        if (data.publish === true) {\n          enqueueSnackbar(`Files published successfully!`, {\n            variant: \"success\" as VariantType,\n          });\n        } else {\n          enqueueSnackbar(`Failed to publish files: ${data.publish}`, {\n            variant: \"error\" as VariantType,\n          });\n        }\n      });\n  };\n\n  const onRemoveFiles = () => {\n    let fileList: string[] = [];\n    filesSelected.forEach((fileIndex) => {\n      fileList.push(client?.listOfAvailableFiles[fileIndex] ?? \"\");\n    });\n    fetch(\"/remove\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        filesSelected: fileList,\n      }),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        if (data.remove === true) {\n          enqueueSnackbar(`Files removed successfully!`, {\n            variant: \"success\" as VariantType,\n          });\n        } else {\n          enqueueSnackbar(`Failed to remove files: ${data.remove}`, {\n            variant: \"error\" as VariantType,\n          });\n        }\n      });\n  };\n\n  const onSearchAllClients = () => {\n    fetch(\"/retrieveall\")\n      .then((response) => response.json())\n      .then((retrieve) => {\n        const clients = retrieve.retrieve as Client[];\n        setClientsDiscovered(clients);\n\n        let files: string[] = [];\n        clients.forEach((client) => {\n          client.listOfAvailableFiles.forEach((file) => {\n            if (!file.includes(file)) {\n              files.push(file);\n            }\n          });\n        });\n      });\n  };\n\n  const onSearchAllFiles = () => {\n    fetch(\"/retrieveall\")\n      .then(async (response) => {\n        if (!response.ok) {\n          const result = await response.json();\n          enqueueSnackbar(`${searchedClient} not found: ${result.retrieve}`, {\n            variant: \"error\" as VariantType,\n          });\n          return Promise.reject();\n        } else {\n          return response.json();\n        }\n      })\n      .then((retrieve) => {\n        const clients = retrieve.retrieve as Client[];\n\n        let files: File[] = [];\n        clients.forEach((c) => {\n          if (c.name !== client?.name)\n            c.listOfAvailableFiles.forEach((file) => {\n              const f: File = {\n                fileName: file,\n                clientName: c.name,\n                ipAddress: c.ipAddress,\n                tcpSocket: c.tcpSocket,\n              };\n              files.push(f);\n            });\n        });\n\n        setFilesDiscovered(files);\n      });\n  };\n\n  const onSearchClient = () => {\n    fetch(\"/retrieve\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        name: searchedClient,\n      }),\n    })\n      .then(async (response) => {\n        if (!response.ok) {\n          const result = await response.json();\n          enqueueSnackbar(`${searchedClient} not found: ${result.retrieve}`, {\n            variant: \"error\" as VariantType,\n          });\n          return Promise.reject();\n        } else {\n          return response.json();\n        }\n      })\n      .then((data) => {\n        const newClientsList: Client[] = [\n          {\n            name: data.retrieve.name,\n            ipAddress: data.retrieve.ip_address,\n            listOfAvailableFiles: data.retrieve.list_of_available_files,\n            tcpSocket: data.retrieve.tcp_socket,\n          },\n        ];\n        setClientsDiscovered(newClientsList);\n        enqueueSnackbar(`${searchedClient} found!`, {\n          variant: \"success\" as VariantType,\n        });\n      });\n  };\n\n  const onSearchFile = () => {\n    fetch(\"/searchfile\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        fileName: searchedFile,\n      }),\n    })\n      .then(async (response) => {\n        if (!response.ok) {\n          const result = await response.json();\n          enqueueSnackbar(`${searchedFile} not found: ${result.searchfile}`, {\n            variant: \"error\" as VariantType,\n          });\n          return Promise.reject();\n        } else {\n          return response.json();\n        }\n      })\n      .then(async (data) => {\n        const newFileList: File[] = [];\n        data.searchfile.list_of_clients.forEach((c: any) => {\n          const file: File = {\n            fileName: searchedFile,\n            clientName: c.name,\n            ipAddress: c.ip_address,\n            tcpSocket: c.tcp_socket,\n          };\n          newFileList.push(file);\n        });\n        setFilesDiscovered(newFileList);\n        enqueueSnackbar(`${searchedFile} found!`, {\n          variant: \"success\" as VariantType,\n        });\n      });\n  };\n\n  const onDownloadFile = (file: File) => {\n    fetch(\"/download\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        fileName: file.fileName,\n        ipAddress: file.ipAddress,\n        tcpSocket: file.tcpSocket,\n      }),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        if (data.download === true) {\n          enqueueSnackbar(`${file.fileName} downloaded successfully!`, {\n            variant: \"success\" as VariantType,\n          });\n        } else {\n          enqueueSnackbar(\n            `Failed to download ${file.fileName}: ${data.download}`,\n            {\n              variant: \"error\" as VariantType,\n            }\n          );\n        }\n      });\n  };\n\n  const handleToggleFiles = (value: number) => () => {\n    const currentIndex = filesSelected.indexOf(value);\n    const newChecked = [...filesSelected];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setFilesSelected(newChecked);\n  };\n\n  const handleExpandClient = (clientName: string) => {\n    const currentIndex = clientsExpanded.indexOf(clientName);\n    const newExpanded = [...clientsExpanded];\n\n    if (currentIndex === -1) {\n      newExpanded.push(clientName);\n    } else {\n      newExpanded.splice(currentIndex, 1);\n    }\n    setClientsExpanded(newExpanded);\n  };\n\n  return (\n    <>\n      <div className=\"App\">\n        <Grid container spacing={3} style={{ paddingTop: \"40px\" }}>\n          <Grid item xs>\n            <Tooltip title=\"De-Register\">\n              <ArrowBackIcon\n                style={{ color: \"white\", marginBottom: \"40px\" }}\n                onClick={() => onBack()}\n              />\n            </Tooltip>\n          </Grid>\n          <Grid item xs={6}>\n            <header className=\"App-page-header\">\n              Time to get transferring.\n            </header>\n          </Grid>\n          <Grid item xs></Grid>\n        </Grid>\n\n        <Box\n          sx={{ width: \"100%\" }}\n          style={{ backgroundColor: \"#282c34\", paddingBottom: \"20px\" }}\n        >\n          <Grid\n            container\n            rowSpacing={1}\n            columnSpacing={{ xs: 1, sm: 2, md: 3 }}\n            style={{ paddingLeft: \"20px\", paddingRight: \"20px\" }}\n          >\n            <Grid item xs={12}>\n              <Item>\n                <p className=\"Grid-titles\">{client ? client.name : \"\"}</p>\n\n                <Box sx={{ width: \"100%\" }}>\n                  <Grid\n                    container\n                    rowSpacing={1}\n                    columnSpacing={{ xs: 1, sm: 2, md: 3 }}\n                  >\n                    <Grid\n                      item\n                      xs={6}\n                      style={{ paddingBottom: \"20px\", paddingLeft: \"50px\" }}\n                      display=\"flex\"\n                      justifyContent=\"flex-start\"\n                    >\n                      <p className=\"Grid-titles\">\n                        <b>IP Address:</b> {client?.ipAddress}\n                      </p>\n                    </Grid>\n                    <Grid\n                      item\n                      xs={6}\n                      style={{ paddingBottom: \"20px\", paddingLeft: \"30px\" }}\n                      display=\"flex\"\n                      justifyContent=\"flex-start\"\n                    >\n                      <TextField\n                        style={{ width: 330 }}\n                        InputProps={{\n                          style: { color: \"white\", fontSize: \"20px\" },\n                          className: classes.input,\n                        }}\n                        InputLabelProps={{\n                          style: { color: \"white\", fontSize: \"16px\" },\n                          className: classes.input,\n                        }}\n                        id=\"client-search\"\n                        label=\"Enter a new IP Address\"\n                        variant=\"standard\"\n                        color=\"primary\"\n                        onChange={(event) =>\n                          setClientIpAddress(event.target.value)\n                        }\n                      />\n                    </Grid>\n                  </Grid>\n                  <Grid\n                    container\n                    rowSpacing={1}\n                    columnSpacing={{ xs: 1, sm: 2, md: 3 }}\n                  >\n                    <Grid\n                      item\n                      xs={6}\n                      style={{ paddingBottom: \"20px\", paddingLeft: \"50px\" }}\n                      display=\"flex\"\n                      justifyContent=\"flex-start\"\n                    >\n                      <p className=\"Grid-titles\">\n                        <b>UDP Socket:</b> {client?.udpSocket}\n                      </p>\n                    </Grid>\n                    <Grid\n                      item\n                      xs={6}\n                      style={{ paddingBottom: \"20px\", paddingLeft: \"30px\" }}\n                      display=\"flex\"\n                      justifyContent=\"flex-start\"\n                    >\n                      <TextField\n                        style={{ width: 330 }}\n                        InputProps={{\n                          style: { color: \"white\", fontSize: \"20px\" },\n                          className: classes.input,\n                        }}\n                        InputLabelProps={{\n                          style: { color: \"white\", fontSize: \"16px\" },\n                          className: classes.input,\n                        }}\n                        id=\"client-search\"\n                        label=\"Enter a new UDP Socket\"\n                        variant=\"standard\"\n                        color=\"primary\"\n                        onChange={(event) =>\n                          setClientUdpSocket(event.target.value)\n                        }\n                      />\n                    </Grid>\n                    <Grid\n                      container\n                      rowSpacing={1}\n                      columnSpacing={{ xs: 1, sm: 2, md: 3 }}\n                      style={{ paddingLeft: \"20px\" }}\n                    >\n                      <Grid\n                        item\n                        xs={6}\n                        style={{ paddingBottom: \"20px\", paddingLeft: \"50px\" }}\n                        display=\"flex\"\n                        justifyContent=\"flex-start\"\n                      >\n                        <p className=\"Grid-titles\">\n                          <b>TCP Socket:</b> {client?.tcpSocket}\n                        </p>\n                      </Grid>\n                      <Grid\n                        item\n                        xs={6}\n                        style={{ paddingBottom: \"20px\", paddingLeft: \"30px\" }}\n                        display=\"flex\"\n                        justifyContent=\"flex-start\"\n                      >\n                        <TextField\n                          style={{ width: 330 }}\n                          InputProps={{\n                            style: { color: \"white\", fontSize: \"20px\" },\n                            className: classes.input,\n                          }}\n                          InputLabelProps={{\n                            style: { color: \"white\", fontSize: \"16px\" },\n                            className: classes.input,\n                          }}\n                          id=\"client-search\"\n                          label=\"Enter a new TCP Socket\"\n                          variant=\"standard\"\n                          color=\"primary\"\n                          onChange={(event) =>\n                            setClientTcpSocket(event.target.value)\n                          }\n                        />\n                      </Grid>\n                    </Grid>\n                  </Grid>\n                  <Grid\n                    container\n                    rowSpacing={1}\n                    columnSpacing={{ xs: 1, sm: 2, md: 3 }}\n                  >\n                    <Grid\n                      item\n                      xs={6}\n                      style={{ paddingBottom: \"20px\", paddingLeft: \"30px\" }}\n                      display=\"flex\"\n                      justifyContent=\"flex-start\"\n                    ></Grid>\n                    <Grid\n                      item\n                      xs={6}\n                      style={{ paddingBottom: \"20px\", paddingLeft: \"100px\" }}\n                      display=\"flex\"\n                      justifyContent=\"flex-start\"\n                    >\n                      <LoadingButton\n                        variant=\"contained\"\n                        size=\"large\"\n                        style={{ width: 200, height: 60, borderRadius: 5 }}\n                        endIcon={<UpdateIcon />}\n                        onClick={onUpdateUserInfo}\n                        // loading={registerLoading}\n                        loadingPosition=\"end\"\n                      >\n                        Update\n                      </LoadingButton>\n                    </Grid>\n                  </Grid>\n                </Box>\n              </Item>\n            </Grid>\n\n            <Grid item xs={12}>\n              <Item>\n                <p className=\"Grid-titles\">Your files</p>\n\n                <List\n                  sx={{\n                    width: \"100%\",\n                    bgcolor: \"#282c34\",\n                    borderRadius: \"4px\",\n                  }}\n                >\n                  {clientFiles.map((file, index) => {\n                    const labelId = `checkbox-list-label-${file}`;\n\n                    return (\n                      <ListItem\n                        key={file}\n                        secondaryAction={\n                          <Icon>\n                            <DescriptionIcon style={{ color: \"white\" }} />\n                          </Icon>\n                        }\n                        disablePadding\n                      >\n                        <ListItemButton\n                          role={undefined}\n                          onClick={handleToggleFiles(index)}\n                          dense\n                        >\n                          <ListItemIcon>\n                            <Checkbox\n                              edge=\"start\"\n                              style={{ color: \"white\" }}\n                              checked={filesSelected.indexOf(index) !== -1}\n                              tabIndex={-1}\n                              disableRipple\n                              inputProps={{ \"aria-labelledby\": labelId }}\n                            />\n                          </ListItemIcon>\n                          <ListItemText\n                            id={labelId}\n                            primary={file}\n                            style={{ color: \"white\" }}\n                          />\n                        </ListItemButton>\n                      </ListItem>\n                    );\n                  })}\n                </List>\n                <Box sx={{ width: \"100%\" }} style={{ paddingTop: \"10px\" }}>\n                  <Grid\n                    container\n                    rowSpacing={1}\n                    columnSpacing={{ xs: 1, sm: 2, md: 3 }}\n                  >\n                    <Grid item xs={6}>\n                      <LoadingButton\n                        variant=\"contained\"\n                        size=\"large\"\n                        style={{ width: 200, height: 60, borderRadius: 5 }}\n                        endIcon={<FileUploadIcon />}\n                        onClick={onPublishFiles}\n                        // loading={registerLoading}\n                        loadingPosition=\"end\"\n                      >\n                        <Typography>Publish</Typography>\n                      </LoadingButton>\n                    </Grid>\n                    <Grid item xs={6}>\n                      <LoadingButton\n                        variant=\"contained\"\n                        size=\"large\"\n                        style={{ width: 200, height: 60, borderRadius: 5 }}\n                        endIcon={<DeleteIcon />}\n                        onClick={onRemoveFiles}\n                        // loading={registerLoading}\n                        loadingPosition=\"end\"\n                      >\n                        <Typography>Remove</Typography>\n                      </LoadingButton>\n                    </Grid>\n                  </Grid>\n                </Box>\n              </Item>\n            </Grid>\n\n            <Grid item xs={12}>\n              <Item>\n                <p className=\"Grid-titles\">Available Clients</p>\n                <Box sx={{ width: \"100%\" }}>\n                  <Grid\n                    container\n                    rowSpacing={1}\n                    columnSpacing={{ xs: 1, sm: 2, md: 3 }}\n                  >\n                    <Grid\n                      item\n                      xs={12}\n                      style={{ paddingBottom: \"20px\", paddingLeft: \"30px\" }}\n                      display=\"flex\"\n                      justifyContent=\"flex-start\"\n                    >\n                      <TextField\n                        style={{ width: 330 }}\n                        InputProps={{\n                          style: { color: \"white\", fontSize: \"20px\" },\n                          className: classes.input,\n                        }}\n                        InputLabelProps={{\n                          style: { color: \"white\", fontSize: \"20px\" },\n                          className: classes.input,\n                        }}\n                        id=\"client-search\"\n                        label=\"Client Name\"\n                        variant=\"standard\"\n                        color=\"primary\"\n                        onChange={(event) =>\n                          setSearchedClient(event.target.value)\n                        }\n                      />\n\n                      <IconButton\n                        aria-label=\"delete\"\n                        onClick={() => onSearchClient()}\n                      >\n                        <SearchIcon style={{ color: \"white\" }} />\n                      </IconButton>\n                    </Grid>\n                  </Grid>\n                </Box>\n                <List\n                  sx={{\n                    width: \"100%\",\n                    bgcolor: \"#282c34\",\n                    borderRadius: \"4px\",\n                  }}\n                >\n                  {clientsDiscovered.map((client) => {\n                    return (\n                      <Box>\n                        <ListItemButton\n                          onClick={() => handleExpandClient(client.name)}\n                        >\n                          <ListItemIcon>\n                            <PersonIcon style={{ color: \"white\" }} />\n                          </ListItemIcon>\n                          <ListItemText\n                            primary={\n                              client.name +\n                              \"@\" +\n                              client.ipAddress +\n                              \":\" +\n                              client.tcpSocket\n                            }\n                          />\n                          {clientsExpanded.indexOf(client.name) !== -1 ? (\n                            <ExpandLess />\n                          ) : (\n                            <ExpandMore />\n                          )}\n                        </ListItemButton>\n                        <Collapse\n                          in={clientsExpanded.indexOf(client.name) !== -1}\n                          timeout=\"auto\"\n                          unmountOnExit\n                        >\n                          <List component=\"div\" disablePadding>\n                            {client.listOfAvailableFiles.map((file) => {\n                              return (\n                                <ListItemButton sx={{ pl: 4 }}>\n                                  <ListItemIcon>\n                                    <DescriptionIcon\n                                      style={{ color: \"white\" }}\n                                    />\n                                  </ListItemIcon>\n                                  <ListItemText primary={file} />\n                                </ListItemButton>\n                              );\n                            })}\n                          </List>\n                        </Collapse>\n                      </Box>\n                    );\n                  })}\n                </List>\n                <Box sx={{ width: \"100%\" }} style={{ paddingTop: \"10px\" }}>\n                  <Grid\n                    container\n                    rowSpacing={1}\n                    columnSpacing={{ xs: 1, sm: 2, md: 3 }}\n                  >\n                    <Grid item xs={12}>\n                      <LoadingButton\n                        variant=\"contained\"\n                        size=\"large\"\n                        style={{ width: 200, height: 60, borderRadius: 5 }}\n                        endIcon={<SearchIcon />}\n                        onClick={onSearchAllClients}\n                        // loading={registerLoading}\n                        loadingPosition=\"end\"\n                      >\n                        <Typography>Search All</Typography>\n                      </LoadingButton>\n                    </Grid>\n                  </Grid>\n                </Box>\n              </Item>\n            </Grid>\n\n            <Grid item xs={12}>\n              <Item>\n                <p className=\"Grid-titles\">Available Files</p>\n                <Box sx={{ width: \"100%\" }}>\n                  <Grid\n                    container\n                    rowSpacing={1}\n                    columnSpacing={{ xs: 1, sm: 2, md: 3 }}\n                  >\n                    <Grid\n                      item\n                      xs={12}\n                      style={{ paddingBottom: \"20px\", paddingLeft: \"30px\" }}\n                      display=\"flex\"\n                      justifyContent=\"flex-start\"\n                    >\n                      <TextField\n                        style={{ width: 330 }}\n                        InputProps={{\n                          style: { color: \"white\", fontSize: \"20px\" },\n                          className: classes.input,\n                        }}\n                        InputLabelProps={{\n                          style: { color: \"white\", fontSize: \"20px\" },\n                          className: classes.input,\n                        }}\n                        id=\"file-search\"\n                        label=\"File Name\"\n                        variant=\"standard\"\n                        color=\"primary\"\n                        onChange={(event) =>\n                          setSearchedFile(event.target.value)\n                        }\n                      />\n                      <IconButton\n                        aria-label=\"delete\"\n                        onClick={() => onSearchFile()}\n                      >\n                        <SearchIcon style={{ color: \"white\" }} />\n                      </IconButton>\n                    </Grid>\n                  </Grid>\n                </Box>\n                <List\n                  sx={{\n                    width: \"100%\",\n                    bgcolor: \"#282c34\",\n                    borderRadius: \"4px\",\n                  }}\n                >\n                  {filesDiscovered.map((file) => {\n                    const labelId = `checkbox-list-label-${file}`;\n\n                    return (\n                      <ListItem\n                        key={file.fileName}\n                        secondaryAction={\n                          <IconButton>\n                            <DownloadIcon\n                              style={{ color: \"white\" }}\n                              onClick={() => onDownloadFile(file)}\n                            />\n                          </IconButton>\n                        }\n                        disablePadding\n                      >\n                        <ListItemButton role={undefined} dense>\n                          <ListItemIcon>\n                            <DescriptionIcon\n                              style={{ color: \"white\", paddingBottom: \"5px\" }}\n                            />\n                          </ListItemIcon>\n                          <ListItemText\n                            id={labelId}\n                            primary={\n                              file.fileName +\n                              \", \" +\n                              file.clientName +\n                              \"@\" +\n                              file.ipAddress +\n                              \":\" +\n                              file.tcpSocket\n                            }\n                            style={{ color: \"white\" }}\n                          />\n                        </ListItemButton>\n                      </ListItem>\n                    );\n                  })}\n                </List>\n                <Box sx={{ width: \"100%\" }} style={{ paddingTop: \"10px\" }}>\n                  <Grid\n                    container\n                    rowSpacing={1}\n                    columnSpacing={{ xs: 1, sm: 2, md: 3 }}\n                  >\n                    <Grid item xs={12}>\n                      <LoadingButton\n                        variant=\"contained\"\n                        size=\"large\"\n                        style={{ width: 200, height: 60, borderRadius: 5 }}\n                        endIcon={<SearchIcon />}\n                        onClick={onSearchAllFiles}\n                        // loading={registerLoading}\n                        loadingPosition=\"end\"\n                      >\n                        <Typography>Search All</Typography>\n                      </LoadingButton>\n                    </Grid>\n                  </Grid>\n                </Box>\n              </Item>\n            </Grid>\n          </Grid>\n        </Box>\n      </div>\n    </>\n  );\n}\n\nfunction App(props: JSX.IntrinsicAttributes & { classes: any }) {\n  return (\n    <SnackbarProvider maxSnack={3}>\n      <PageBody {...props} />\n    </SnackbarProvider>\n  );\n}\n\nexport default withStyles(styles)(App);\n","export default __webpack_public_path__ + \"static/media/blockchain.9f725277.svg\";","import blockchain from \"./blockchain.svg\";\nimport \"./WelcomePage.css\";\nimport LoadingButton from \"@mui/lab/LoadingButton\";\nimport ConnectWithoutContactIcon from \"@mui/icons-material/ConnectWithoutContact\";\nimport { Typography } from \"@mui/material\";\nimport { useState } from \"react\";\nimport { SnackbarProvider, useSnackbar, VariantType } from \"notistack\";\nimport { useNavigate } from \"react-router\";\nimport TextField from \"@mui/material/TextField\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport PersonIcon from \"@mui/icons-material/Person\";\n\nconst styles = {\n  input: {\n    color: \"white\",\n  },\n};\n\nfunction PageBody(props: { classes: any }) {\n  const { enqueueSnackbar } = useSnackbar();\n  const [registerLoading, setRegisterLoading] = useState(false);\n  const [loginLoading, setLoginLoading] = useState(false);\n  const navigate = useNavigate();\n  const [enteredName, setEnteredName] = useState(\"\");\n  const [registeredClientName, setRegisteredClientName] = useState(\"\");\n  const [serverIpAddress, setServerIpAddress] = useState(\"\");\n  const { classes } = props;\n\n  const onRegister = () => {\n    setRegisterLoading(true);\n\n    if (\n      !/^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$/gi.test(\n        serverIpAddress\n      )\n    ) {\n      enqueueSnackbar(`Failed to register: Invalid IP Address!`, {\n        variant: \"error\" as VariantType,\n      });\n      setRegisterLoading(false);\n    } else {\n      fetch(\"/register\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          name: enteredName,\n          serverIpAddress: serverIpAddress,\n        }),\n      })\n        .then((response) => response.json())\n        .then((data) => {\n          if (data.register === true) {\n            navigate(`app`);\n          } else {\n            enqueueSnackbar(`Failed to register: ${data.register}`, {\n              variant: \"error\" as VariantType,\n            });\n            setRegisterLoading(false);\n          }\n        });\n    }\n  };\n\n  const onLogin = () => {\n    setLoginLoading(true);\n\n    fetch(\"/login\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        name: registeredClientName,\n        serverIpAddress: serverIpAddress,\n      }),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        if (data.login === true) {\n          navigate(`app`);\n        } else {\n          enqueueSnackbar(`User does not exist. Please Register instead.`, {\n            variant: \"error\" as VariantType,\n          });\n          setLoginLoading(false);\n        }\n      });\n  };\n\n  return (\n    <>\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <div style={{ paddingTop: \"150px\" }}>\n            <img src={blockchain} className=\"App-logo\" alt=\"logo\" />\n          </div>\n          <p className=\"App-title\">\n            Welcome to P2PFS, a Peer to Peer File Sharing system.\n          </p>\n\n          <p className=\"Textfield-title\">Register as a New Client</p>\n          <div>\n            <TextField\n              style={{ width: 300 }}\n              InputProps={{\n                style: { color: \"white\", fontSize: \"20px\" },\n                className: classes.input,\n              }}\n              InputLabelProps={{\n                style: { color: \"white\", fontSize: \"20px\" },\n                className: classes.input,\n              }}\n              id=\"client-name\"\n              label=\"Name\"\n              variant=\"standard\"\n              color=\"primary\"\n              onChange={(event) => setEnteredName(event.target.value)}\n            />\n          </div>\n          <div>\n            <TextField\n              style={{ width: 300 }}\n              InputProps={{\n                style: { color: \"white\", fontSize: \"20px\" },\n                className: classes.input,\n              }}\n              InputLabelProps={{\n                style: { color: \"white\", fontSize: \"20px\" },\n                className: classes.input,\n              }}\n              id=\"client-name\"\n              label=\"Server IP Address\"\n              variant=\"standard\"\n              color=\"primary\"\n              onChange={(event) => setServerIpAddress(event.target.value)}\n            />\n          </div>\n          <div className=\"Register-button\">\n            <LoadingButton\n              variant=\"contained\"\n              size=\"large\"\n              style={{ width: 300, height: 60, borderRadius: 50 }}\n              endIcon={<ConnectWithoutContactIcon />}\n              onClick={onRegister}\n              loading={registerLoading}\n              loadingPosition=\"end\"\n            >\n              <Typography>Register</Typography>\n            </LoadingButton>\n          </div>\n\n          <p className=\"Textfield-title\">Login to an Existing Client</p>\n          <div>\n            <TextField\n              style={{ width: 300 }}\n              InputProps={{\n                style: { color: \"white\", fontSize: \"20px\" },\n                className: classes.input,\n              }}\n              InputLabelProps={{\n                style: { color: \"white\", fontSize: \"20px\" },\n                className: classes.input,\n              }}\n              id=\"client-name\"\n              label=\"Registered Client Name\"\n              variant=\"standard\"\n              color=\"primary\"\n              onChange={(event) => setRegisteredClientName(event.target.value)}\n            />\n          </div>\n          <div>\n            <TextField\n              style={{ width: 300 }}\n              InputProps={{\n                style: { color: \"white\", fontSize: \"20px\" },\n                className: classes.input,\n              }}\n              InputLabelProps={{\n                style: { color: \"white\", fontSize: \"20px\" },\n                className: classes.input,\n              }}\n              id=\"client-name\"\n              label=\"Server IP Address\"\n              variant=\"standard\"\n              color=\"primary\"\n              onChange={(event) => setServerIpAddress(event.target.value)}\n            />\n          </div>\n          <div className=\"Register-button\" style={{ paddingBottom: 100 }}>\n            <LoadingButton\n              variant=\"contained\"\n              size=\"large\"\n              style={{ width: 300, height: 60, borderRadius: 50 }}\n              endIcon={<PersonIcon />}\n              onClick={onLogin}\n              loading={loginLoading}\n              loadingPosition=\"end\"\n            >\n              <Typography>Log in</Typography>\n            </LoadingButton>\n          </div>\n        </header>\n      </div>\n    </>\n  );\n}\n\nfunction WelcomePage(props: JSX.IntrinsicAttributes & { classes: any }) {\n  return (\n    <SnackbarProvider maxSnack={3}>\n      <PageBody {...props} />\n    </SnackbarProvider>\n  );\n}\n\nexport default withStyles(styles)(WelcomePage);\n","import { FC } from \"react\";\nimport { Route, Routes } from \"react-router-dom\";\nimport App from \"./App\";\nimport WelcomePage from \"./WelcomePage\";\n\nexport type IRouter = {};\n\nexport const Router: FC<IRouter> = () => {\n  return (\n    <Routes>\n      <Route path=\"/\" element={<WelcomePage />} />\n      <Route path=\"/app\" element={<App />} />\n    </Routes>\n  );\n};\n\nexport default Router;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport WelcomePage from './WelcomePage';\nimport reportWebVitals from './reportWebVitals';\nimport Router from './Router';\nimport { BrowserRouter } from \"react-router-dom\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Router />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}